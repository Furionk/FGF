//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OnSceneLoadComponent onSceneLoad { get { return (OnSceneLoadComponent)GetComponent(GameComponentsLookup.OnSceneLoad); } }
    public bool hasOnSceneLoad { get { return HasComponent(GameComponentsLookup.OnSceneLoad); } }

    public void AddOnSceneLoad(string newNextSceneName) {
        var index = GameComponentsLookup.OnSceneLoad;
        var component = CreateComponent<OnSceneLoadComponent>(index);
        component.nextSceneName = newNextSceneName;
        AddComponent(index, component);
    }

    public void ReplaceOnSceneLoad(string newNextSceneName) {
        var index = GameComponentsLookup.OnSceneLoad;
        var component = CreateComponent<OnSceneLoadComponent>(index);
        component.nextSceneName = newNextSceneName;
        ReplaceComponent(index, component);
    }

    public void RemoveOnSceneLoad() {
        RemoveComponent(GameComponentsLookup.OnSceneLoad);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOnSceneLoad;

    public static Entitas.IMatcher<GameEntity> OnSceneLoad {
        get {
            if (_matcherOnSceneLoad == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OnSceneLoad);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOnSceneLoad = matcher;
            }

            return _matcherOnSceneLoad;
        }
    }
}
